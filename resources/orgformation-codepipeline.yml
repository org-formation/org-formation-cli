AWSTemplateFormatVersion: '2010-09-09'
Description: 'Organization Formation setup for CodeCommit, CodeBuild and CodePipeline'

Parameters:

  resourcePrefix:
    Type: String
    Default: orgformation

  repositoryName:
    Type: String
    Default: organization-formation

  stateBucketName:
    Type: String

Resources:

  OrgBuildLogGroup:
    Type: 'AWS::Logs::LogGroup'
    Properties:
      RetentionInDays: 7
      LogGroupName: !Sub '/codebuild/${resourcePrefix}-build'

  OrgBuildRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub '${resourcePrefix}-build-service-role'
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action:
              - sts:AssumeRole
            Condition:
              ArnLike:
                aws:SourceArn: !Sub "arn:aws:codebuild:${AWS::Region}:${AWS::AccountId}:project/${resourcePrefix}-build"
      Path: /
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/AdministratorAccess' # see: https://github.com/org-formation/org-formation-cli/blob/master/docs/least-priviledge.md
      Policies:
        - PolicyName: !Sub '${resourcePrefix}-build-service-role-policy'
          PolicyDocument:
            Version: 2012-10-17
            Statement:
            - Effect: Allow
              Action:
                - "ec2:DescribeRegions"
              Resource:
                - "*"
            - Effect: Allow
              Action:
                - "events:PutEvents"
              Resource:
                - !Sub 'arn:aws:events:${AWS::Region}:${AWS::AccountId}:event-bus/default'
            - Effect: Allow
              Action:
                - "sts:AssumeRole"
              Resource:
                - "arn:aws:iam::*:role/OrganizationFormationBuildAccessRole"
            - Effect: Allow
              Resource:
              - !GetAtt OrgBuildLogGroup.Arn
              - !Sub '${OrgBuildLogGroup.Arn}:*'
              Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
            - Effect: Allow
              Resource:
                - !Sub 'arn:aws:s3:::${stateBucketName}'
                - !Sub 'arn:aws:s3:::${stateBucketName}/*'
              Action:
              - s3:PutObject
              - s3:GetObject
              - s3:GetObjectVersion
              - s3:GetBucketAcl
              - s3:GetBucketLocation
            - Effect: Allow
              Resource:
              - !GetAtt OrgRepo.Arn
              Action:
              - codecommit:GitPull

  OrgPipelineRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub '${resourcePrefix}-codepipeline-service-role'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: !Sub '${resourcePrefix}-codepipeline-service-role-policy'
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
            - Action:
              - iam:PassRole
              Resource: "*"
              Effect: Allow
              Condition:
                StringEqualsIfExists:
                  iam:PassedToService:
                  - cloudformation.amazonaws.com
                  - elasticbeanstalk.amazonaws.com
                  - ec2.amazonaws.com
                  - ecs-tasks.amazonaws.com
            - Action:
              - codecommit:CancelUploadArchive
              - codecommit:GetBranch
              - codecommit:GetCommit
              - codecommit:GetUploadArchiveStatus
              - codecommit:UploadArchive
              Resource: "*"
              Effect: Allow
            - Action:
              - codedeploy:CreateDeployment
              - codedeploy:GetApplication
              - codedeploy:GetApplicationRevision
              - codedeploy:GetDeployment
              - codedeploy:GetDeploymentConfig
              - codedeploy:RegisterApplicationRevision
              Resource: "*"
              Effect: Allow
            - Action:
              - elasticbeanstalk:*
              - ec2:*
              - elasticloadbalancing:*
              - autoscaling:*
              - cloudwatch:*
              - s3:*
              - sns:*
              - cloudformation:*
              - rds:*
              - sqs:*
              - ecs:*
              Resource: "*"
              Effect: Allow
            - Action:
              - lambda:InvokeFunction
              - lambda:ListFunctions
              Resource: "*"
              Effect: Allow
            - Action:
              - opsworks:CreateDeployment
              - opsworks:DescribeApps
              - opsworks:DescribeCommands
              - opsworks:DescribeDeployments
              - opsworks:DescribeInstances
              - opsworks:DescribeStacks
              - opsworks:UpdateApp
              - opsworks:UpdateStack
              Resource: "*"
              Effect: Allow
            - Action:
              - cloudformation:CreateStack
              - cloudformation:DeleteStack
              - cloudformation:DescribeStacks
              - cloudformation:UpdateStack
              - cloudformation:CreateChangeSet
              - cloudformation:DeleteChangeSet
              - cloudformation:DescribeChangeSet
              - cloudformation:ExecuteChangeSet
              - cloudformation:SetStackPolicy
              - cloudformation:ValidateTemplate
              Resource: "*"
              Effect: Allow
            - Action:
              - codebuild:BatchGetBuilds
              - codebuild:StartBuild
              Resource: "*"
              Effect: Allow
            - Effect: Allow
              Action:
              - devicefarm:ListProjects
              - devicefarm:ListDevicePools
              - devicefarm:GetRun
              - devicefarm:GetUpload
              - devicefarm:CreateUpload
              - devicefarm:ScheduleRun
              Resource: "*"
            - Effect: Allow
              Action:
              - servicecatalog:ListProvisioningArtifacts
              - servicecatalog:CreateProvisioningArtifact
              - servicecatalog:DescribeProvisioningArtifact
              - servicecatalog:DeleteProvisioningArtifact
              - servicecatalog:UpdateProduct
              Resource: "*"
            - Effect: Allow
              Action:
              - cloudformation:ValidateTemplate
              Resource: "*"
            - Effect: Allow
              Action:
              - ecr:DescribeImages
              Resource: "*"

  OrgRepo:
    Type: AWS::CodeCommit::Repository
    Properties:
      RepositoryName: !Ref repositoryName
      RepositoryDescription: AWS Organization Formation repository
      Code:
        BranchName: main
        S3:
          Bucket: !Ref stateBucketName
          Key: 'initial-commit.zip'

  OrgPipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Type: S3
        Location: !Ref stateBucketName
      Name: !Sub '${resourcePrefix}-pipeline'
      RoleArn : !GetAtt OrgPipelineRole.Arn
      Stages:
        - Name: Source
          Actions:
          - InputArtifacts: []
            Name: Source
            Region: !Ref AWS::Region
            ActionTypeId:
              Category: Source
              Owner: AWS
              Provider: CodeCommit
              Version: '1'
            OutputArtifacts:
            - Name: SourceArtifact
            Configuration:
              PollForSourceChanges: 'false'
              BranchName: main
              RepositoryName: !GetAtt OrgRepo.Name
            RunOrder: 1
        - Name: Build
          Actions:
          - InputArtifacts:
            - Name: SourceArtifact
            Name: Build
            Region: !Ref AWS::Region
            ActionTypeId:
              Category: Build
              Owner: AWS
              Provider: CodeBuild
              Version: '1'
            OutputArtifacts:
            - Name: BuildArtifact
            Configuration:
              ProjectName: !Ref OrgBuildProject
            RunOrder: 1

  OrgPipelineEventRule:
    Type: AWS::Events::Rule
    Properties:
      Description: !Sub Listens for changes to the ${OrgRepo.Name} repository and runs the pipeline
      EventPattern:
        source:
          - aws.codecommit
        detail-type:
          - CodeCommit Repository State Change
        resources:
          - !GetAtt OrgRepo.Arn
        detail:
          event:
            - referenceCreated
            - referenceUpdated
          referenceType:
            - branch
          referenceName:
            - main
      Name: !Sub '${resourcePrefix}-pipeline-event-rule'
      State: ENABLED
      Targets:
        - Arn: !Sub arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:${OrgPipeline}
          RoleArn: !GetAtt OrgPipelineEventRuleRole.Arn
          Id: OrgPipeline

  OrgPipelineEventRuleRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - events.amazonaws.com
            Action:
              - sts:AssumeRole
            Condition:
              ArnLike:
                aws:SourceArn: !Sub "arn:aws:events:${AWS::Region}:${AWS::AccountId}:rule/${resourcePrefix}-pipeline-event-rule"
      Description: !Sub Used to trigger the pipeline attached to the ${OrgRepo.Name} repository
      Path: /
      Policies:
        - PolicyName: !Sub ${resourcePrefix}-pipeline-event-rule-role-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
            - Effect: Allow
              Action:
                - codepipeline:StartPipelineExecution
              Resource:
                - !Sub arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:${OrgPipeline}
      RoleName: !Sub ${resourcePrefix}-pipeline-event-rule-role

  OrgBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub '${resourcePrefix}-build'
      Description: AWS Organization Formation Build Project
      Artifacts: { Type: NO_ARTIFACTS }
      Environment:
        Type: LINUX_CONTAINER
        Image: aws/codebuild/standard:6.0
        ComputeType: BUILD_GENERAL1_SMALL
        ImagePullCredentialsType: CODEBUILD
      QueuedTimeoutInMinutes: 480
      ServiceRole: !Ref OrgBuildRole
      Source:
        GitCloneDepth: 1
        Location: !GetAtt OrgRepo.CloneUrlHttp
        Type: CODECOMMIT
      LogsConfig:
        CloudWatchLogs:
          GroupName: !Ref OrgBuildLogGroup
          Status: ENABLED
      SourceVersion: refs/heads/main
      TimeoutInMinutes: 180


Outputs:
  OrgBuildRole:
    Value: !GetAtt OrgBuildRole.RoleId
    Export:
      Name: !Sub ${AWS::StackName}-role-id
